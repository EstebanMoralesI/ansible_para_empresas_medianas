############################################################################
#              ROL DE PREPARACION DEL CONTENIDO PARA GITLAB                # 
#                !!!PRECAUCIÓN!!! NO MODIFICAR EL CODIGO                   # 
############################################################################

# # # LECTURA DEL CONTENIDO DE LOS ARCHIVOS EN EL INVENTORY # # #
- name: Lectura del contenido de los archivos txt
  set_fact:
    dir_path: ./repositorio/{{ nombre_empresa }}/{{ git_ruta }}    
    file_content: "{{ item }}"        
  with_file:
    - "./repositorio/{{ nombre_empresa }}/{{ git_ruta }}/{{ git_prefijo }}{{ nombre_equipo }}{{ extension }}"      
  no_log: True

# # # GENERANDO EL ARBOL DE ARCHIVOS DEL REPOSITORIO # # #
- name: Obtener el árbol de archivos del repositorio
  uri:
    url: https://gitlab.com/api/v4/projects/{{ gitlab_project_id }}/repository/tree?ref=master&per_page=100&page=1
    body_format: json
    validate_certs: no  
    status_code: 200
    return_content: yes
    headers:
      Private-Token: "{{ gitlab_access_token }}"
  register: response
  delegate_to: localhost

# # # OBTENIENDO LOS ARCHIVOS DEL REPOSITORIO # # #
- name: Obtener los archivos del proyecto
  set_fact:
    project_files: "{{ response.json | json_query('[].name') }}"
    file_name: "{{ git_prefijo }}{{ nombre_equipo }}{{ extension }}"

# # # ESTABLECIENDO ACCION "CREATE" CUANDO NO EXISTAN ARCHIVOS EN EL PROYECTO # # #
- name: Establecer la acción de confirmación como "create"
  set_fact:
    commit_action: create
  when: file_name is not in project_files

# # # ESTABLECIENDO ACCION "UPDATE" CUANDO EXISTAN ARCHIVOS EN EL PROYECTO # # #
- name: Establecer la acción de confirmación como "update"
  set_fact:
    commit_action: update
  when: file_name in project_files

# # # OBTENIENDO EL CONTENIDO DE LOS ARCHIVOS EN GITLAB CUANDO LA ACCION SEA "UPDATE" # # #
- name: Obtener el contenido del archivo de gitlab
  uri:
    url: https://gitlab.com/api/v4/projects/{{ gitlab_project_id }}/repository/files/{{ file_name }}/raw?ref=master
    body_format: json
    validate_certs: no
    status_code: 200, 404
    return_content: yes
    headers:
      Private-Token: "{{ gitlab_access_token }}"
  register: response
  delegate_to: localhost
  when: commit_action == "update"

# # # GRABANDO EL CONTENIDO DE LOS ARCHIVOS EN GITLAB CUANDO LA ACCION SEA "UPDATE" # # #
- name: Grabando el contenido del archivo de gitlab
  set_fact:
    file_content_in_gitlab: "{{ response.content }}"
  when: commit_action == "update"

# # # CREANDO EL ACTION DICT CUANDO ESTE "CREATE" O EN "UPDATE" NO HAYA CONTENIDO # # #
- name: Creando el action dict
  set_fact:
    action_dict:
      action: "{{ commit_action}}"
      file_path: "{{ git_prefijo }}{{ nombre_equipo }}{{ extension }}"
      content: "{{ git_prefijo }}{{ file_content }}{{ extension }}"
  when: commit_action == "create" or (commit_action == "update" and file_content_in_gitlab != file_content)

# # # CREANDO EL DICT VACIO CUANDO LA ACCION SEA "UPDATE" Y EXISTA CONTENIDO # # #
- name: Creando empty dict
  set_fact:
    action_dict: {}
  when: commit_action == "update" and file_content_in_gitlab == file_content
